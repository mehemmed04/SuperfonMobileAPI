@using SuperfonWorks.Data.Entities
@model SuperfonMobileAPI.Models.Dtos.UserListRowDTO
@{
    ViewBag.Title = "Edit";
    //Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Edit</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.UserId)

    @if (Model == null || Model.UserId == 0)
    {
        <div class="form-group">
            @Html.LabelFor(model => model.Username, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Username, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Username, "", new { @class = "text-danger" })
            </div>
        </div>
    }
    else
    {
<div class="form-group">
    @Html.LabelFor(model => model.Username, htmlAttributes: new { @class = "control-label col-md-2" })
    <label>@Model.Username</label>
</div>
    }


    <div class="form-group">
        @Html.LabelFor(model => model.DisplayName, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.DisplayName, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.DisplayName, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Phone, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Phone, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Phone, "", new { @class = "text-danger" })
        </div>
    </div>
     <div class="form-group">
        @Html.LabelFor(model => model.UserPID, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.UserPID, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.UserPID, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.GroupName, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
           <select id="drpEmpList2" class="form-control" asp-for="UserGroupId" asp-items="@(new SelectList(ViewData["UserGroups"] as IEnumerable<UserGroup> , "UserGroupId", "UserGroupName"))">  
                    <option value="">--Seçin--</option>  
            </select>  
            <input type="hidden" asp-for="MenuPermissionIdAdd" />  
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.IsActive, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10" >
            @Html.EditorFor(model => model.IsActive, new { htmlAttributes = new { @class = "form-control" ,@style ="height : 14px" } })
            @Html.ValidationMessageFor(model => model.IsActive, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <div type="button" class="btn btn-success" id="create_password">Şifrə Yarat</div>
           @* <span id="result1" class="ml-2"></span>*@
            @Html.TextBoxFor(model => model.RandomPassword,null,new { id = "result1" })
        </div>
    </div>
    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Yaddaşa Yaz" class="btn btn-success" />
        </div>
    </div>


</div>
}

<div>
    @Html.ActionLink("Geriyə", "Index")
</div>

    <br/>
    <br/>
    <br/>
    <br/>

@*@if (Model != null && Model.UserId != 0)
{
     @using (Html.BeginForm(actionName:"Delete",controllerName:"Users", method: FormMethod.Post, new { id = Model.UserId }))
    {
        @Html.AntiForgeryToken()
    <div class="form-horizontal">
        <button type="submit" class="btn btn-danger" >Sil</button>
    </div>
    }
    
}*@
@if (Model != null && Model.UserId != 0)
{
    <form action="/somewhere" method="post">
        <input type="hidden" name="name" value="@Model.UserId" />


        <button class="btn btn-danger" formaction="/Users/Delete?id=@Model.UserId" formmethod="post">Sil</button>
    </form>
}


<script type="text/javascript">
        $(document).ready(function () {

            $('#create_password').click(function () {
                $.ajax({
                    type: 'GET',
                    url: '/users/GenerateRandomPassword',
                    success: function (result) {
                        $('#result1').val(result);
                    }
                });
            });
        });
    </script>