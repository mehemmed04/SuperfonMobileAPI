@model UserListRowDTO
@{
}


@using (Html.BeginForm(actionName:"AddBranchPermission",controllerName:"Users", method: FormMethod.Post))
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.UserId)
        <div class="form-group">
        @Html.LabelFor(model => model.BranchNumberAdd, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.BranchNumberAdd, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.BranchNumberAdd, "", new { @class = "text-danger" })
        </div>
    </div>

    <input type="submit" value="Əlavə Et" class="btn btn-success" />
</div>
}



<table class="table table-bordered table-responsive table-hover">
    <tr>
        <th>Filial No </th>
        <th>Filial Adı </th>
        <th></th>
    </tr>
    @foreach (var d in Model.Branches)
    {
<tr>
    <td>@d.BranchNumber</td>
    <td>@d.BranchName</td>
    <td>@using (Html.BeginForm(actionName: "DeleteBranchPermission",controllerName: "Users", method: FormMethod.Post,routeValues: new Dictionary<string, object> { { "userId",Model.UserId },{ "branchNumber",d.BranchNumber } }))
                {  <input type="submit" value="Sil">
    }
    </td>
</tr>

    }
</table>